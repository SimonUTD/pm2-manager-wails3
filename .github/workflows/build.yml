name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  APP_NAME: pm2-manager

jobs:
  test-build:
    name: test-build (${{ matrix.name }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            name: windows-amd64
          - os: macos-latest
            name: macos-universal
          - os: ubuntu-latest
            name: linux-amd64

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Task
      uses: arduino/setup-task@v1
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Wails3
      run: go install github.com/wailsapp/wails/v3/cmd/wails3@latest

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          pkg-config \
          libgtk-3-dev \
          libwebkit2gtk-4.0-dev

    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: |
        # Xcode command line tools should be pre-installed on GitHub runners
        xcode-select --print-path || echo "Xcode tools not found but continuing..."

    - name: Check dependencies
      run: wails3 doctor

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Generate bindings
      run: wails3 task common:generate:bindings

    - name: Build frontend
      run: wails3 task common:build:frontend
      env:
        PRODUCTION: "true"

    - name: Build application
      run: wails3 task build
      env:
        PRODUCTION: "true"

    - name: List bin directory contents
      run: |
        echo "Contents of bin directory:"
        ls -la bin/ || echo "bin directory does not exist"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pm2-manager-${{ matrix.name }}
        path: bin/
        retention-days: 30


