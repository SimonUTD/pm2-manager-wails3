name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows 配置
          - os: 'windows-latest'
            platform: 'windows/amd64'
            asset_name_suffix: 'windows-amd64.exe'
            # 这是根据你 wails.json 确认的正确路径
            asset_path: 'build/bin/pm2-manager.exe'
            wails_os: 'windows'
            
          # macOS 配置
          - os: 'macos-latest'
            platform: 'darwin/universal'
            asset_name_suffix: 'macos-universal.dmg'
            # 这是打包成 dmg 后的最终路径
            asset_path: 'pm2-manager.dmg'
            wails_os: 'darwin'
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Tidy Go modules
      run: go mod tidy

    - name: Install Wails3 CLI
      run: go install github.com/wailsapp/wails/v3/cmd/wails3@latest

    - name: Check dependencies
      run: wails3 doctor

    - name: Configure npm for Apple Silicon (ARM64)
      if: matrix.os == 'macos-latest'
      run: npm config set arch arm64

    - name: Build Wails project (macOS)
      if: matrix.os == 'macos-latest'
      run: wails3 task ${{ matrix.wails_os }}:package:universal

    - name: Build Wails project (Windows)
      if: matrix.os == 'windows-latest'
      run: wails3 task ${{ matrix.wails_os }}:package

    - name: Create DMG for macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install create-dmg
        create-dmg \
          --volname "PM2 Manager" \
          --app-drop-link 600 185 \
          "$GITHUB_WORKSPACE/build/bin/pm2-manager.dmg" \
          "$GITHUB_WORKSPACE/build/bin/pm2-manager.app"
